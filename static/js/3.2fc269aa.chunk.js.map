{"version":3,"sources":["Components/App.module.css","Components/ContactFormListItem/ContactFormListItem.module.css","Components/ContactFormList/ContactList.module.css","Components/Filter/Filter.module.css","Components/Alert/Alert.module.css","redux/phoneBookActions/phoneBookActions.js","redux/phoneBookActions/phoneBookOperations.js","Components/ContactFormListItem/ContactFormListItem.jsx","Components/Filter/Filter.jsx","Components/ContactFormList/ContactFormList.jsx","Components/Alert/Alert.jsx","Components/pages/Contacts.js"],"names":["module","exports","filter","type","phoneBookActionsTypes","FILTER","payload","duplicate","DUPLICATE","addContactRequest","ADD_CONTACT_REQUEST","addContactSuccess","contacts","ADD_CONTACT_SUCCESS","addContactError","error","ADD_CONTACT_ERROR","fetchContactRequest","FETCH_CONTACT_REQUEST","fetchContactSuccess","FETCH_CONTACT_SUCCESS","fetchContactError","FETCH_CONTACT_ERROR","removeContactError","DEL_CONTACT_ERROR","removeContactSuccess","id","DEL_CONTACT_SUCCESS","removeContactRequest","DEL_CONTACT_REQUEST","baseURL","onAddContact","dispatch","phoneBookActions","axios","post","then","response","data","catch","onRemoveContacts","delete","fetchContacts","get","ContactFormListItem","name","number","onRemove","key","className","css","contactListItem","onClick","mapDispatchToProps","onChangeFilter","connect","state","value","phoneBookSelectors","getFilter","styles","filter_label","filter_input","onChange","e","target","phoneBookOperations","items","getContacts","getFilteredContacts","TransitionGroup","component","map","CSSTransition","timeout","classNames","unmountOnExit","contact_list_item","Alert","in","appear","alertWrapper","ContactsPage","handleChange","setState","handleSubmit","preventDefault","duplicateFn","console","log","setTimeout","props","onAlert","some","toLowerCase","trim","this","onGetCurrentUser","alert","contactListTitle","onSubmit","htmlFor","form_label","form_input","addButton","Component","authOperations","getCurrentUser","getAlert"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,aAAe,0BAA0B,iBAAmB,8BAA8B,OAAS,oBAAoB,aAAe,0BAA0B,aAAe,0BAA0B,SAAW,sBAAsB,WAAa,wBAAwB,WAAa,wBAAwB,UAAY,yB,mBCAlVD,EAAOC,QAAU,CAAC,gBAAkB,6CAA6C,mBAAqB,kD,mBCAtGD,EAAOC,QAAU,CAAC,aAAe,kCAAkC,mBAAqB,wCAAwC,kBAAoB,uCAAuC,kBAAoB,yC,mBCA/MD,EAAOC,QAAU,CAAC,aAAe,6BAA6B,aAAe,+B,mBCA7ED,EAAOC,QAAU,CAAC,OAAS,sBAAsB,aAAe,4BAA4B,aAAe,8B,0ICqF5F,GACbC,OArFa,SAAAA,GAEb,MAAO,CACLC,KAAMC,IAAsBC,OAC5BC,QAAS,CACPJ,YAiFJK,UA5EgB,iBAAO,CACvBJ,KAAMC,IAAsBI,YA6E5BC,kBAxEwB,WACxB,MAAO,CACLN,KAAMC,IAAsBM,sBAuE9BC,kBAnEwB,SAAAC,GAExB,MAAO,CACLT,KAAMC,IAAsBS,oBAC5BP,QAAQ,eACHM,KA+DPE,gBA1DsB,SAAAC,GACtB,MAAO,CACLZ,KAAMC,IAAsBY,kBAC5BV,QAAS,CAAES,WAyDbE,oBAnD0B,WAC1B,MAAO,CACLd,KAAMC,IAAsBc,wBAkD9BC,oBA9C0B,SAAAP,GAC1B,MAAO,CACLT,KAAMC,IAAsBgB,sBAC5Bd,QAASM,IA4CXS,kBAxCwB,SAAAN,GACxB,MAAO,CACLZ,KAAMC,IAAsBkB,oBAC5BhB,QAAS,CAAES,WAuCbQ,mBAnByB,SAAAR,GACzB,MAAO,CACLZ,KAAMC,IAAsBoB,kBAC5BlB,QAAS,CAAES,WAiBbU,qBA5B2B,SAAAC,GAE3B,MAAO,CACLvB,KAAMC,IAAsBuB,oBAC5BrB,QAASoB,IAyBXE,qBAnC2B,WAC3B,MAAO,CACLzB,KAAMC,IAAsByB,uBChE1BC,EAAO,2CAqCE,GAAEC,aAnCI,SAAAnB,GAAQ,OAAI,SAAAoB,GAC/BA,EAASC,EAAiBxB,qBAC1ByB,IACGC,KADH,UACWL,EADX,aAC+BlB,GAC5BwB,MAAK,SAAAC,GAEJL,EAASC,EAAiBtB,kBAAkB0B,EAASC,UAEtDC,OAAM,SAAAxB,GAAK,OAAIiB,EAASC,EAAiBnB,gBAAgBC,SA2B/ByB,iBAZN,SAAAd,GAAE,OAAI,SAAAM,GAC7BA,EAASC,EAAiBL,wBAC1BM,IACGO,OADH,UACaX,EADb,qBACiCJ,IAC9BU,MAAK,WACJJ,EAASC,EAAiBR,qBAAqBC,OAEhDa,OAAM,SAAAxB,GACLiB,EAASC,EAAiBV,mBAAmBR,SAIF2B,cAxB3B,kBAAM,SAAAV,GAC1BA,EAASC,EAAiBhB,uBAC1BiB,IACGS,IADH,UACUb,EADV,cAEGM,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACPN,EAASC,EAAiBd,oBAAoBmB,OAE/CC,OAAM,SAAAxB,GACLiB,EAASC,EAAiBZ,kBAAkBN,U,yCCTnC6B,EAZa,SAAC,GAAD,IAAGlB,EAAH,EAAGA,GAAImB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OAC1B,oCACE,wBAAIC,IAAKtB,EAAIuB,UAAWC,IAAIC,iBAC1B,+BAAKN,EAAL,OACA,+BAAKC,EAAL,KACA,4BAAQ3C,KAAK,SAASiD,QAASL,GAA/B,a,kCCqBAM,EAAqB,CACzBC,eAAgBrB,EAAiB/B,QAGpBqD,eARS,SAAAC,GAAK,MAAK,CAChCC,MAAOC,IAAmBC,UAAUH,MAOEH,EAAzBE,EA1BA,SAAC,GAAD,IAAGE,EAAH,EAAGA,MAAOH,EAAV,EAAUA,eAAV,OACb,oCACE,2BAAOL,UAAWW,IAAOC,cACvB,oDACA,2BACEZ,UAAWW,IAAOE,aAClB3D,KAAK,OACL0C,KAAK,SACLY,MAAOA,EACPM,SAAU,SAAAC,GAERV,EAAeU,EAAEC,OAAOR,eCyB5BJ,EAAqB,CACzBb,iBAAkB0B,EAAoB1B,kBAGzBe,eAZS,SAAAC,GAEtB,MAAO,CACLW,MAAOT,IAAmBU,YAAYZ,GACtC5C,SAAU8C,IAAmBW,oBAAoBb,MAQbH,EAAzBE,EAtCS,SAAC,GAAD,IAAG3C,EAAH,EAAGA,SAAU4B,EAAb,EAAaA,iBAAb,OACtB,oCAGE,kBAAC,EAAD,MACA,kBAAC8B,EAAA,EAAD,CAAiBC,UAAU,MACxB3D,EAAS4D,KAAI,gBAAG9C,EAAH,EAAGA,GAAImB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,kBAAC2B,EAAA,EAAD,CACEzB,IAAKtB,EACLgD,QAAS,IACTC,WAAYf,IACZgB,eAAa,GAEb,kBAAC,EAAD,CACE3B,UAAWW,IAAOiB,kBAClB7B,IAAKtB,EACLmB,KAAMA,EACNC,OAAQA,EACRC,SAAU,kBAAMP,EAAiBd,e,0CCP9BoD,EAhBD,WACZ,OACE,kBAACL,EAAA,EAAD,CACEE,WAAYzB,IACZ6B,IAAI,EACJC,QAAQ,EACRN,QAAS,KACTE,eAAa,GAEb,yBAAK3B,UAAWC,IAAI+B,cAClB,0DCFFC,E,4MACJ1B,MAAQ,CACNX,KAAM,GACNC,OAAQ,I,EAQVqC,aAAe,SAAAnB,GAAM,IAAD,EACMA,EAAEC,OAAlBpB,EADU,EACVA,KAAMY,EADI,EACJA,MACd,EAAK2B,SAAL,eAAiBvC,EAAOY,K,EAG1B4B,aAAe,SAAArB,GACbA,EAAEsB,iBAEE,EAAKC,eACPC,QAAQC,IAAI,MAEZC,YAAW,WACT,EAAKC,MAAMC,YACV,QAEH,EAAKD,MAAM5D,aAAX,eAA6B,EAAKyB,QAClC,EAAK4B,SAAS,CAAEvC,KAAM,GAAIC,OAAQ,O,EAItCyC,YAAc,WACZ,IAAM1C,EAAO,EAAKW,MAAMX,KACxB,OAAO,EAAK8C,MAAM/E,SAASiF,MACzB,SAAAjF,GAAQ,OAAIA,EAASiC,KAAKiD,gBAAkBjD,EAAKiD,cAAcC,W,kEA3BjEC,KAAKL,MAAMM,mBACXD,KAAKL,MAAMjD,kB,+BA8BH,IAAD,EACkBsD,KAAKxC,MAAtBX,EADD,EACCA,KAAMC,EADP,EACOA,OAEd,OACE,yBAAKG,UAAWW,IAAOhD,UACpBoF,KAAKL,MAAMO,OAAS,kBAAC,EAAD,CAAOA,MAAOA,QAEnC,wBAAIjD,UAAWW,IAAOuC,kBAAtB,YACA,0BAAMC,SAAUJ,KAAKX,cACnB,2BAAOgB,QAAQ,OAAOpD,UAAWW,IAAO0C,YAAxC,OAEE,2BACErD,UAAWW,IAAO2C,WAClBpG,KAAK,OACLsD,MAAOZ,EACPkB,SAAUiC,KAAKb,aACftC,KAAK,UAIT,2BAAOI,UAAWW,IAAO0C,YAAzB,UAEE,2BACErD,UAAWW,IAAO0C,WAClBnG,KAAK,OACLsD,MAAOX,EACPiB,SAAUiC,KAAKb,aACftC,KAAK,YAIT,4BAAQ1C,KAAK,SAAS8C,UAAWW,IAAO4C,WACrC,IADH,gBAKF,kBAAC,EAAD,W,GA1EmBC,aAyFrBpD,EAAqB,CACzBtB,aAAcmC,EAAoBnC,aAClC6D,QAAS3D,EAAiB1B,UAC1B0F,iBAAkBS,IAAeC,eACjCjE,cAAewB,EAAoBxB,eAGtBa,uBAhBS,SAAAC,GAGtB,MAAO,CACL5C,SAAU8C,IAAmBU,YAAYZ,GACzC0C,MAAOxC,IAAmBkD,SAASpD,MAWCH,EAAzBE,CAA6C2B","file":"static/js/3.2fc269aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"App_sectionTitle__1KGSm\",\"contactListTitle\":\"App_contactListTitle__2XDTF\",\"appear\":\"App_appear__n4iaO\",\"appearActive\":\"App_appearActive__1JsP3\",\"welcomeTitle\":\"App_welcomeTitle__1KX4n\",\"contacts\":\"App_contacts__DaJM7\",\"form_label\":\"App_form_label__3vlTu\",\"form_input\":\"App_form_input__2aasZ\",\"addButton\":\"App_addButton__fwodz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactFormListItem_contactListItem__2QroZ\",\"contact__container\":\"ContactFormListItem_contact__container__gSvdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__o3nta\",\"contact__container\":\"ContactList_contact__container__DyKQP\",\"contact_list_item\":\"ContactList_contact_list_item__2waXs\",\"contact_container\":\"ContactList_contact_container__TLEYr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_input\":\"Filter_filter_input__9jAjy\",\"filter_label\":\"Filter_filter_label__2FOKr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Alert_appear__1x9c1\",\"appearActive\":\"Alert_appearActive__UBk5q\",\"alertWrapper\":\"Alert_alertWrapper__1PQgW\"};","import phoneBookActionsTypes from './phoneBookActionTypes';\n\nconst filter = filter => {\n  // console.log(filter);\n  return {\n    type: phoneBookActionsTypes.FILTER,\n    payload: {\n      filter,\n    },\n  };\n};\n\nconst duplicate = () => ({\n  type: phoneBookActionsTypes.DUPLICATE,\n});\n\n// ------ ADD ------\n\nconst addContactRequest = () => {\n  return {\n    type: phoneBookActionsTypes.ADD_CONTACT_REQUEST,\n  };\n};\n\nconst addContactSuccess = contacts => {\n  // console.log(contacts);\n  return {\n    type: phoneBookActionsTypes.ADD_CONTACT_SUCCESS,\n    payload: {\n      ...contacts,\n    },\n  };\n};\n\nconst addContactError = error => {\n  return {\n    type: phoneBookActionsTypes.ADD_CONTACT_ERROR,\n    payload: { error },\n  };\n};\n\n// -------- FETCH -------\n\nconst fetchContactRequest = () => {\n  return {\n    type: phoneBookActionsTypes.FETCH_CONTACT_REQUEST,\n  };\n};\n\nconst fetchContactSuccess = contacts => {\n  return {\n    type: phoneBookActionsTypes.FETCH_CONTACT_SUCCESS,\n    payload: contacts,\n  };\n};\n\nconst fetchContactError = error => {\n  return {\n    type: phoneBookActionsTypes.FETCH_CONTACT_ERROR,\n    payload: { error },\n  };\n};\n\n// ------ REMOVE ------\n\nconst removeContactRequest = () => {\n  return {\n    type: phoneBookActionsTypes.DEL_CONTACT_REQUEST,\n  };\n};\n\nconst removeContactSuccess = id => {\n  // console.log(id);\n  return {\n    type: phoneBookActionsTypes.DEL_CONTACT_SUCCESS,\n    payload: id,\n  };\n};\n\nconst removeContactError = error => {\n  return {\n    type: phoneBookActionsTypes.DEL_CONTACT_ERROR,\n    payload: { error },\n  };\n};\n\nexport default {\n  filter,\n  duplicate,\n\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n\n  removeContactError,\n  removeContactSuccess,\n  removeContactRequest,\n};\n","import axios from 'axios';\nimport phoneBookActions from './phoneBookActions';\n\nconst baseURL = `https://goit-phonebook-api.herokuapp.com`;\n\nconst onAddContact = contacts => dispatch => {\n  dispatch(phoneBookActions.addContactRequest());\n  axios\n    .post(`${baseURL}/contacts`, contacts)\n    .then(response => {\n      // console.log(response.data.contacts);\n      dispatch(phoneBookActions.addContactSuccess(response.data));\n    })\n    .catch(error => dispatch(phoneBookActions.addContactError(error)));\n};\n\nconst fetchContacts = () => dispatch => {\n  dispatch(phoneBookActions.fetchContactRequest());\n  axios\n    .get(`${baseURL}/contacts`)\n    .then(({ data }) => {\n      dispatch(phoneBookActions.fetchContactSuccess(data));\n    })\n    .catch(error => {\n      dispatch(phoneBookActions.fetchContactError(error));\n    });\n};\n\nconst onRemoveContacts = id => dispatch => {\n  dispatch(phoneBookActions.removeContactRequest());\n  axios\n    .delete(`${baseURL}/contacts/${id}`)\n    .then(() => {\n      dispatch(phoneBookActions.removeContactSuccess(id));\n    })\n    .catch(error => {\n      dispatch(phoneBookActions.removeContactError(error));\n    });\n};\n\nexport default { onAddContact, onRemoveContacts, fetchContacts };\n","import React from \"react\";\nimport css from \"./ContactFormListItem.module.css\";\n\nconst ContactFormListItem = ({ id, name, number, onRemove }) => (\n  <>\n    <li key={id} className={css.contactListItem}>\n      <p> {name} : </p>\n      <p> {number} </p>\n      <button type=\"button\" onClick={onRemove}>\n        Delete\n      </button>\n    </li>\n  </>\n);\n\nexport default ContactFormListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport phoneBookActions from '../../redux/phoneBookActions/phoneBookActions';\nimport phoneBookSelectors from '../../redux/phoneBookActions/phoneBookSelectors';\n\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChangeFilter }) => (\n  <>\n    <label className={styles.filter_label}>\n      <p>Find contacts by name</p>\n      <input\n        className={styles.filter_input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={e => {\n          // console.log(e.target.value);\n          onChangeFilter(e.target.value);\n        }}\n      />\n    </label>\n  </>\n);\n\nconst mapStateToProps = state => ({\n  value: phoneBookSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: phoneBookActions.filter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport ContactFormListItem from '../ContactFormListItem/ContactFormListItem';\nimport phoneBookOperations from '../../redux/phoneBookActions/phoneBookOperations';\nimport phoneBookSelectors from '../../redux/phoneBookActions/phoneBookSelectors';\nimport styles from './ContactList.module.css';\nimport Filter from '../Filter/Filter';\n\nconst ContactFormList = ({ contacts, onRemoveContacts }) => (\n  <>\n    {/* {this.props.contacts.length > 1 && <Filter />} */}\n\n    <Filter />\n    <TransitionGroup component=\"ul\">\n      {contacts.map(({ id, name, number }) => (\n        <CSSTransition\n          key={id}\n          timeout={1000}\n          classNames={styles}\n          unmountOnExit\n        >\n          <ContactFormListItem\n            className={styles.contact_list_item}\n            key={id}\n            name={name}\n            number={number}\n            onRemove={() => onRemoveContacts(id)}\n          />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  </>\n);\n\nconst mapStateToProps = state => {\n  // console.log(state, \"stateList\");\n  return {\n    items: phoneBookSelectors.getContacts(state),\n    contacts: phoneBookSelectors.getFilteredContacts(state),\n  };\n};\n\nconst mapDispatchToProps = {\n  onRemoveContacts: phoneBookOperations.onRemoveContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFormList);\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport css from './Alert.module.css';\n\nconst Alert = () => {\n  return (\n    <CSSTransition\n      classNames={css}\n      in={true}\n      appear={true}\n      timeout={1500}\n      unmountOnExit\n    >\n      <div className={css.alertWrapper}>\n        <p>Contact already exists !</p>\n      </div>\n    </CSSTransition>\n  );\n};\n\nexport default Alert;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport phoneBookOperations from '../../redux/phoneBookActions/phoneBookOperations';\nimport phoneBookActions from '../../redux/phoneBookActions/phoneBookActions';\nimport phoneBookSelectors from '../../redux/phoneBookActions/phoneBookSelectors';\nimport ContactFormList from '../ContactFormList/ContactFormList';\nimport authOperations from '../../redux/auth/authOperations';\nimport styles from '../App.module.css';\nimport Alert from '../Alert/Alert';\n// import stylesAlert from '../Alert/Alert.module.css';\n\nclass ContactsPage extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n    this.props.fetchContacts();\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.duplicateFn()) {\n      console.log('hi');\n      // this.props.onAlert();\n      setTimeout(() => {\n        this.props.onAlert();\n      }, 1500);\n    } else {\n      this.props.onAddContact({ ...this.state });\n      this.setState({ name: '', number: '' });\n    }\n  };\n\n  duplicateFn = () => {\n    const name = this.state.name;\n    return this.props.contacts.some(\n      contacts => contacts.name.toLowerCase() === name.toLowerCase().trim(),\n    );\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <div className={styles.contacts}>\n        {this.props.alert && <Alert alert={alert} />}\n\n        <h2 className={styles.contactListTitle}>Contacts</h2>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"Name\" className={styles.form_label}>\n            Name\n            <input\n              className={styles.form_input}\n              type=\"text\"\n              value={name}\n              onChange={this.handleChange}\n              name=\"name\"\n            />\n          </label>\n\n          <label className={styles.form_label}>\n            Number:\n            <input\n              className={styles.form_label}\n              type=\"text\"\n              value={number}\n              onChange={this.handleChange}\n              name=\"number\"\n            />\n          </label>\n\n          <button type=\"submit\" className={styles.addButton}>\n            {' '}\n            Add contact\n          </button>\n        </form>\n        <ContactFormList />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state, 'ContactPage');\n\n  return {\n    contacts: phoneBookSelectors.getContacts(state),\n    alert: phoneBookSelectors.getAlert(state),\n  };\n};\n\nconst mapDispatchToProps = {\n  onAddContact: phoneBookOperations.onAddContact,\n  onAlert: phoneBookActions.duplicate,\n  onGetCurrentUser: authOperations.getCurrentUser,\n  fetchContacts: phoneBookOperations.fetchContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsPage);\n\nContactsPage.propTypes = {\n  number: PropTypes.number,\n  name: PropTypes.string,\n};\n"],"sourceRoot":""}