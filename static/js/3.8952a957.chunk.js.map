{"version":3,"sources":["Components/App.module.css","Components/ContactFormListItem/ContactFormListItem.module.css","Components/ContactFormList/ContactList.module.css","Components/Alert/Alert.module.css","redux/phoneBookActions/phoneBookActions.js","redux/phoneBookActions/phoneBookOperations.js","Components/ContactFormListItem/ContactFormListItem.jsx","Components/Filter/Filter.jsx","Components/ContactFormList/ContactFormList.jsx","Components/Alert/Alert.jsx","Components/pages/Contacts.js"],"names":["module","exports","filter","type","phoneBookActionsTypes","FILTER","payload","duplicate","DUPLICATE","addContactRequest","ADD_CONTACT_REQUEST","addContactSuccess","contacts","ADD_CONTACT_SUCCESS","addContactError","error","ADD_CONTACT_ERROR","fetchContactRequest","FETCH_CONTACT_REQUEST","fetchContactSuccess","FETCH_CONTACT_SUCCESS","fetchContactError","FETCH_CONTACT_ERROR","removeContactError","DEL_CONTACT_ERROR","removeContactSuccess","id","DEL_CONTACT_SUCCESS","removeContactRequest","DEL_CONTACT_REQUEST","baseURL","onAddContact","dispatch","phoneBookActions","axios","post","then","response","data","catch","onRemoveContacts","delete","fetchContacts","get","ContactFormListItem","name","number","onRemove","key","className","css","contactListItem","onClick","mapDispatchToProps","onChangeFilter","connect","state","value","phoneBookSelectors","getFilter","onChange","e","target","phoneBookOperations","items","getContacts","getFilteredContacts","TransitionGroup","component","styles","contactList","map","CSSTransition","timeout","classNames","unmountOnExit","Alert","in","appear","alertWrapper","ContactsPage","handleChange","setState","handleSubmit","preventDefault","duplicateFn","console","log","setTimeout","props","onAlert","some","toLowerCase","trim","this","onGetCurrentUser","alert","contactListTitle","onSubmit","htmlFor","Component","authOperations","getCurrentUser","getAlert"],"mappings":"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","file":"static/js/3.8952a957.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"App_sectionTitle__1KGSm\",\"contactListTitle\":\"App_contactListTitle__2XDTF\",\"appear\":\"App_appear__n4iaO\",\"appearActive\":\"App_appearActive__1JsP3\",\"welcomeTitle\":\"App_welcomeTitle__1KX4n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactFormListItem_contactListItem__2QroZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3QudJ\",\"enter\":\"ContactList_enter__180Wv\",\"enterActive\":\"ContactList_enterActive__tWDq-\",\"exit\":\"ContactList_exit__2qkJ3\",\"exitActive\":\"ContactList_exitActive__3nsEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Alert_appear__1x9c1\",\"appearActive\":\"Alert_appearActive__UBk5q\",\"alertWrapper\":\"Alert_alertWrapper__1PQgW\"};","import phoneBookActionsTypes from './phoneBookActionTypes';\n\nconst filter = filter => {\n  // console.log(filter);\n  return {\n    type: phoneBookActionsTypes.FILTER,\n    payload: {\n      filter,\n    },\n  };\n};\n\nconst duplicate = () => ({\n  type: phoneBookActionsTypes.DUPLICATE,\n});\n\n// ------ ADD ------\n\nconst addContactRequest = () => {\n  return {\n    type: phoneBookActionsTypes.ADD_CONTACT_REQUEST,\n  };\n};\n\nconst addContactSuccess = contacts => {\n  // console.log(contacts);\n  return {\n    type: phoneBookActionsTypes.ADD_CONTACT_SUCCESS,\n    payload: {\n      ...contacts,\n    },\n  };\n};\n\nconst addContactError = error => {\n  return {\n    type: phoneBookActionsTypes.ADD_CONTACT_ERROR,\n    payload: { error },\n  };\n};\n\n// -------- FETCH -------\n\nconst fetchContactRequest = () => {\n  return {\n    type: phoneBookActionsTypes.FETCH_CONTACT_REQUEST,\n  };\n};\n\nconst fetchContactSuccess = contacts => {\n  return {\n    type: phoneBookActionsTypes.FETCH_CONTACT_SUCCESS,\n    payload: contacts,\n  };\n};\n\nconst fetchContactError = error => {\n  return {\n    type: phoneBookActionsTypes.FETCH_CONTACT_ERROR,\n    payload: { error },\n  };\n};\n\n// ------ REMOVE ------\n\nconst removeContactRequest = () => {\n  return {\n    type: phoneBookActionsTypes.DEL_CONTACT_REQUEST,\n  };\n};\n\nconst removeContactSuccess = id => {\n  // console.log(id);\n  return {\n    type: phoneBookActionsTypes.DEL_CONTACT_SUCCESS,\n    payload: id,\n  };\n};\n\nconst removeContactError = error => {\n  return {\n    type: phoneBookActionsTypes.DEL_CONTACT_ERROR,\n    payload: { error },\n  };\n};\n\nexport default {\n  filter,\n  duplicate,\n\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n\n  removeContactError,\n  removeContactSuccess,\n  removeContactRequest,\n};\n","import axios from 'axios';\nimport phoneBookActions from './phoneBookActions';\n\nconst baseURL = `https://goit-phonebook-api.herokuapp.com`;\n\nconst onAddContact = contacts => dispatch => {\n  dispatch(phoneBookActions.addContactRequest());\n  axios\n    .post(`${baseURL}/contacts`, contacts)\n    .then(response => {\n      // console.log(response.data.contacts);\n      dispatch(phoneBookActions.addContactSuccess(response.data));\n    })\n    .catch(error => dispatch(phoneBookActions.addContactError(error)));\n};\n\nconst fetchContacts = () => dispatch => {\n  dispatch(phoneBookActions.fetchContactRequest());\n  axios\n    .get(`${baseURL}/contacts`)\n    .then(({ data }) => {\n      dispatch(phoneBookActions.fetchContactSuccess(data));\n    })\n    .catch(error => {\n      dispatch(phoneBookActions.fetchContactError(error));\n    });\n};\n\nconst onRemoveContacts = id => dispatch => {\n  dispatch(phoneBookActions.removeContactRequest());\n  axios\n    .delete(`${baseURL}/contacts/${id}`)\n    .then(() => {\n      dispatch(phoneBookActions.removeContactSuccess(id));\n    })\n    .catch(error => {\n      dispatch(phoneBookActions.removeContactError(error));\n    });\n};\n\nexport default { onAddContact, onRemoveContacts, fetchContacts };\n","import React from \"react\";\nimport css from \"./ContactFormListItem.module.css\";\n\nconst ContactFormListItem = ({ id, name, number, onRemove }) => (\n  <>\n    <li key={id} className={css.contactListItem}>\n      <p> {name} : </p>\n      <p> {number} </p>\n      <button type=\"button\" onClick={onRemove}>\n        Delete\n      </button>\n    </li>\n  </>\n);\n\nexport default ContactFormListItem;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport phoneBookActions from \"../../redux/phoneBookActions/phoneBookActions\";\nimport phoneBookSelectors from \"../../redux/phoneBookActions/phoneBookSelectors\";\n\nconst Filter = ({ value, onChangeFilter }) => (\n  <>\n    <label>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={(e) => {\n          // console.log(e.target.value);\n          onChangeFilter(e.target.value);\n        }}\n      />\n    </label>\n  </>\n);\n\nconst mapStateToProps = (state) => ({\n  value: phoneBookSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: phoneBookActions.filter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport ContactFormListItem from '../ContactFormListItem/ContactFormListItem';\nimport phoneBookOperations from '../../redux/phoneBookActions/phoneBookOperations';\nimport phoneBookSelectors from '../../redux/phoneBookActions/phoneBookSelectors';\nimport styles from './ContactList.module.css';\nimport Filter from '../Filter/Filter';\n\nconst ContactFormList = ({ contacts, onRemoveContacts }) => (\n  <>\n    {/* {this.props.contacts.length > 1 && <Filter />} */}\n\n    <Filter />\n    <TransitionGroup component=\"ul\" className={styles.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <CSSTransition\n          key={id}\n          timeout={1000}\n          classNames={styles}\n          unmountOnExit\n        >\n          <ContactFormListItem\n            key={id}\n            name={name}\n            number={number}\n            onRemove={() => onRemoveContacts(id)}\n          />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  </>\n);\n\nconst mapStateToProps = state => {\n  // console.log(state, \"stateList\");\n  return {\n    items: phoneBookSelectors.getContacts(state),\n    contacts: phoneBookSelectors.getFilteredContacts(state),\n  };\n};\n\nconst mapDispatchToProps = {\n  onRemoveContacts: phoneBookOperations.onRemoveContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFormList);\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport css from './Alert.module.css';\n\nconst Alert = () => {\n  return (\n    <CSSTransition\n      classNames={css}\n      in={true}\n      appear={true}\n      timeout={1500}\n      unmountOnExit\n    >\n      <div className={css.alertWrapper}>\n        <p>Contact already exists !</p>\n      </div>\n    </CSSTransition>\n  );\n};\n\nexport default Alert;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport phoneBookOperations from '../../redux/phoneBookActions/phoneBookOperations';\nimport phoneBookActions from '../../redux/phoneBookActions/phoneBookActions';\nimport phoneBookSelectors from '../../redux/phoneBookActions/phoneBookSelectors';\nimport ContactFormList from '../ContactFormList/ContactFormList';\nimport authOperations from '../../redux/auth/authOperations';\nimport styles from '../App.module.css';\nimport Alert from '../Alert/Alert';\n// import stylesAlert from '../Alert/Alert.module.css';\n\nclass ContactsPage extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n    this.props.fetchContacts();\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.duplicateFn()) {\n      console.log('hi');\n      // this.props.onAlert();\n      setTimeout(() => {\n        this.props.onAlert();\n      }, 1500);\n    } else {\n      this.props.onAddContact({ ...this.state });\n      this.setState({ name: '', number: '' });\n    }\n  };\n\n  duplicateFn = () => {\n    const name = this.state.name;\n    return this.props.contacts.some(\n      contacts => contacts.name.toLowerCase() === name.toLowerCase().trim(),\n    );\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <>\n        {this.props.alert && <Alert alert={alert} />}\n\n        <h2 className={styles.contactListTitle}>Contacts</h2>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"Name\">\n            Name\n            <input\n              type=\"text\"\n              value={name}\n              onChange={this.handleChange}\n              name=\"name\"\n            />\n          </label>\n\n          <label>\n            Number:\n            <input\n              type=\"text\"\n              value={number}\n              onChange={this.handleChange}\n              name=\"number\"\n            />\n          </label>\n\n          <button type=\"submit\"> Add contact</button>\n        </form>\n        <ContactFormList />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state, 'ContactPage');\n\n  return {\n    contacts: phoneBookSelectors.getContacts(state),\n    alert: phoneBookSelectors.getAlert(state),\n  };\n};\n\nconst mapDispatchToProps = {\n  onAddContact: phoneBookOperations.onAddContact,\n  onAlert: phoneBookActions.duplicate,\n  onGetCurrentUser: authOperations.getCurrentUser,\n  fetchContacts: phoneBookOperations.fetchContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsPage);\n\nContactsPage.propTypes = {\n  number: PropTypes.number,\n  name: PropTypes.string,\n};\n"],"sourceRoot":""}