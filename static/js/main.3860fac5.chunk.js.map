{"version":3,"sources":["redux/phoneBookActions/phoneBookSelectors.js","redux/phoneBookActions/phoneBookActionTypes.js","redux/auth/authActions.js","redux/auth/authOperations.js","redux/auth/authTypes.js","routes/routes.js","redux/auth/authSelectors.js","routes/PrivateRoutes.js","routes/PublicRoutes.js","Components/Navigation/Navigation.js","Components/UserMenu/UserMenu.js","Components/AuthNav/AuthNav.js","Components/AppBar/AppBar.js","Components/Layout/Layout.js","Components/App.js","redux/phoneBookActions/phoneBookReducers.js","redux/auth/authReducer.js","redux/store.js","index.js"],"names":["getFilter","state","contacts","filter","getContacts","items","getFilteredContacts","createSelector","contact","name","toLowerCase","includes","getLoading","loading","getAlert","alertSwitch","ADD","DEL","FILTER","DUPLICATE","ADD_CONTACT_REQUEST","ADD_CONTACT_SUCCESS","ADD_CONTACT_ERROR","DEL_CONTACT_REQUEST","DEL_CONTACT_SUCCESS","DEL_CONTACT_ERROR","FETCH_CONTACT_REQUEST","FETCH_CONTACT_SUCCESS","FETCH_CONTACT_ERROR","registerRequest","type","authActionType","REGISTER_REQUEST","registerSuccess","userData","REGISTER_SUCCESS","payload","registerError","error","REGISTER_ERROR","loginRequest","LOGIN_REQUEST","loginSuccess","LOGIN_SUCCESS","loginError","LOGIN_ERROR","logoutSuccess","LOGOUT_SUCCESS","getCurrentUserRequest","token","GET_CURRENT_USER_REQUEST","getCurrentUserSuccess","GET_CURRENT_USER_SUCCESS","getCurrentUserError","GET_CURRENT_USER_ERROR","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","authActions","post","then","response","console","log","data","catch","logIn","getCurrentUser","getState","persistedToken","auth","get","logOut","logoutError","LOGOUT_REQUEST","LOGOUT_ERROR","path","label","exact","component","lazy","private","restricted","user","connect","isAuthenticated","authSelectors","MyComponent","rest","render","props","to","styles","link","display","textDecoration","padding","fontWeight","fontFamily","color","activeLink","style","activeStyle","container","alignItems","marginRight","onLogout","authOperations","onClick","AuthNav","header","justifyContent","borderBottom","width","marginLeft","Layout","children","App","this","fallback","routes","map","route","PrivateRoutes","key","PublicRoutes","Component","phoneBookSelectors","combineReducers","phoneBookActionsTypes","id","initialState","email","middleware","thunk","persistConfig","storage","whiteList","rootReducer","phoneBookReducers","persistReducer","authReducers","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3860fac5.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\nconst getLoading = state => state.contacts.loading;\nconst getFilter = state => state.contacts.filter;\nconst getAlert = state => state.contacts.alertSwitch;\n\nconst getContacts = state => {\n  return state.contacts.items;\n};\n\nconst getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  },\n);\n\nexport default {\n  getLoading,\n  getFilter,\n  getAlert,\n  getFilteredContacts,\n  getContacts,\n};\n","const ADD = \"contacts/add\";\nconst DEL = \"contacts/del\";\nconst FILTER = \"contacts/filter\";\nconst DUPLICATE = \"contacts/duplicate\";\n\nconst ADD_CONTACT_REQUEST = \"contacts/addContactRequest\";\nconst ADD_CONTACT_SUCCESS = \"contacts/addContactSuccess\";\nconst ADD_CONTACT_ERROR = \"contacts/addContactError\";\n\nconst DEL_CONTACT_REQUEST = \"contact/removeContactRequest\";\nconst DEL_CONTACT_SUCCESS = \"contact/removeContactSuccess\";\nconst DEL_CONTACT_ERROR = \"contact/removeContactError\";\n\nconst FETCH_CONTACT_REQUEST = \"contacts/fetchContactsRequest\";\nconst FETCH_CONTACT_SUCCESS = \"contacts/fetchContactsSuccess\";\nconst FETCH_CONTACT_ERROR = \"contacts/fetchContactsError\";\n\nexport default {\n  ADD,\n  DEL,\n  FILTER,\n  DUPLICATE,\n\n  ADD_CONTACT_REQUEST,\n  ADD_CONTACT_SUCCESS,\n  ADD_CONTACT_ERROR,\n\n  DEL_CONTACT_REQUEST,\n  DEL_CONTACT_SUCCESS,\n  DEL_CONTACT_ERROR,\n\n  FETCH_CONTACT_REQUEST,\n  FETCH_CONTACT_SUCCESS,\n  FETCH_CONTACT_ERROR,\n};\n","import authActionType from './authTypes';\n\n// ---- REGISTER ----\nconst registerRequest = () => ({\n  type: authActionType.REGISTER_REQUEST,\n});\nconst registerSuccess = userData => ({\n  type: authActionType.REGISTER_SUCCESS,\n  payload: { ...userData },\n});\nconst registerError = error => ({\n  type: authActionType.REGISTER_ERROR,\n  payload: error,\n});\n\n// ---- LOGIN ----\nconst loginRequest = () => ({\n  type: authActionType.LOGIN_REQUEST,\n});\nconst loginSuccess = userData => ({\n  type: authActionType.LOGIN_SUCCESS,\n  payload: userData,\n});\nconst loginError = error => ({\n  type: authActionType.LOGIN_ERROR,\n  payload: error,\n});\n\n// ---- LOGOUT ----\nconst logoutSuccess = () => ({\n  type: authActionType.LOGOUT_SUCCESS,\n});\n\n// ---- GET CURRENT USER ----\nconst getCurrentUserRequest = token => ({\n  type: authActionType.GET_CURRENT_USER_REQUEST,\n  payload: token,\n});\nconst getCurrentUserSuccess = token => ({\n  type: authActionType.GET_CURRENT_USER_SUCCESS,\n  payload: token,\n});\nconst getCurrentUserError = token => ({\n  type: authActionType.GET_CURRENT_USER_ERROR,\n  payload: token,\n});\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n\n  loginRequest,\n  loginSuccess,\n  loginError,\n\n  logoutSuccess,\n\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import axios from 'axios';\nimport authActions from '../auth/authActions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => dispatch => {\n  dispatch(authActions.registerRequest());\n\n  axios\n    .post('/users/signup', credentials)\n    .then(response => {\n      console.log(response);\n      token.set(response.data.token);\n      dispatch(authActions.registerSuccess(response.data));\n    })\n    .catch(error => dispatch(authActions.registerError(error)));\n};\n\nconst logIn = credentials => dispatch => {\n  dispatch(authActions.loginRequest());\n\n  axios\n    .post('/users/login', credentials)\n    .then(response => {\n      token.set(response.data.token);\n      dispatch(authActions.loginSuccess(response.data));\n    })\n    .catch(error => dispatch(authActions.loginError(error)));\n};\n\nconst getCurrentUser = () => (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  axios\n    .get('/users/current')\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\n    .catch(error => authActions.getCurrentUserError(error));\n};\n\nconst logOut = () => dispatch => {\n  // dispatch(authActions.logoutRequest());\n\n  axios\n    .post('/users/logout')\n    .then(() => {\n      token.unset();\n      dispatch(authActions.logoutSuccess());\n    })\n    .catch(error => dispatch(authActions.logoutError(error)));\n};\n\nexport default { register, logIn, getCurrentUser, logOut };\n","const REGISTER_REQUEST = 'auth/registerRequest';\nconst REGISTER_SUCCESS = 'auth/registerSuccess';\nconst REGISTER_ERROR = 'auth/registerError';\n\nconst LOGIN_REQUEST = 'auth/loginRequest';\nconst LOGIN_SUCCESS = 'auth/loginSuccess';\nconst LOGIN_ERROR = 'auth/loginError';\n\nconst LOGOUT_REQUEST = 'auth/logoutRequest';\nconst LOGOUT_SUCCESS = 'auth/logoutSuccess';\nconst LOGOUT_ERROR = 'auth/logoutError';\n\nconst GET_CURRENT_USER_REQUEST = 'auth/getCurrentUserRequest';\nconst GET_CURRENT_USER_SUCCESS = 'auth/getCurrentUserSuccess';\nconst GET_CURRENT_USER_ERROR = 'auth/getCurrentUserError';\n\nexport default {\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS,\n  REGISTER_ERROR,\n\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS,\n  LOGOUT_ERROR,\n\n  GET_CURRENT_USER_REQUEST,\n  GET_CURRENT_USER_SUCCESS,\n  GET_CURRENT_USER_ERROR,\n};\n","import { lazy } from 'react';\n\nexport default [\n  {\n    path: '/',\n    label: 'Home',\n    exact: true,\n    component: lazy(() => import('../Components/pages/Home')),\n    private: false,\n    restricted: false,\n  },\n  {\n    path: '/register',\n    label: 'Register',\n    exact: true,\n    component: lazy(() => import('../Components/pages/Register')),\n    private: false,\n    restricted: true,\n  },\n  {\n    path: '/login',\n    label: 'Login',\n    exact: true,\n    component: lazy(() => import('../Components/pages/Login')),\n    private: false,\n    restricted: true,\n  },\n  {\n    path: '/contacts',\n    label: 'Contacts',\n    exact: true,\n    component: lazy(() => import('../Components/pages/Contacts')),\n    private: true,\n    restricted: false,\n  },\n];\n","const isAuthenticated = state => {\n  // console.log(state);\n  return state.auth.token;\n};\n\nconst getUserName = state => state.auth.user.name;\n\nexport default { isAuthenticated, getUserName };\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from '../redux/auth/authSelectors';\n\nfunction PrivateRoute({ component: MyComponent, isAuthenticated, ...rest }) {\n  // console.log('isAuth', isAuthenticated);\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return isAuthenticated ? (\n          <MyComponent {...props} />\n        ) : (\n          <Redirect to=\"/register\" />\n        );\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = state => {\n  // console.log('state', state);\n  return {\n    isAuthenticated: authSelectors.isAuthenticated(state),\n  };\n};\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from '../redux/auth/authSelectors';\n\nfunction PublicRoute({ component: MyComponent, isAuthenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return isAuthenticated && rest.restricted ? (\n          <Redirect to=\"/contacts\" />\n        ) : (\n          <MyComponent {...props} />\n        );\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from '../../redux/auth/authSelectors';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    fontFamily: 'arial',\n\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#rgb(88, 102, 179)',\n  },\n};\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      HOME\n    </NavLink>\n\n    {isAuthenticated && (\n      <NavLink\n        to=\"/contacts\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Contacts\n      </NavLink>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport authSelectors from '../../redux/auth/authSelectors';\nimport authOperations from '../../redux/auth/authOperations';\n// import ContactsPage from '../pages/Contacts';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nconst UserMenu = ({ name, onLogout }) => (\n  <div style={styles.container}>\n    <span style={styles.name}>Welcome, {name}</span>\n    {/* <ContactsPage /> */}\n    <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  name: authSelectors.getUserName(state),\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: () => dispatch(authOperations.logOut()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      SIGN UP\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      LOG IN\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Navigation from '../Navigation/Navigation';\nimport UserMenu from '../UserMenu/UserMenu';\nimport AuthNav from '../AuthNav/AuthNav';\nimport authSelectors from '../../redux/auth/authSelectors';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header style={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from 'react';\nimport AppBar from '../AppBar/AppBar';\n\nconst styles = {\n  container: {\n    width: '80vw',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    padding: '0 24px',\n  },\n};\n\nconst Layout = ({ children }) => (\n  <div style={styles.container}>\n    <AppBar />\n    {children}\n  </div>\n);\n\nexport default Layout;\n","import React, { Component, Suspense } from 'react';\n// import { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport routes from '../routes/routes';\nimport PrivateRoutes from '../routes/PrivateRoutes';\nimport PublicRoutes from '../routes/PublicRoutes';\n\n// import phoneBookOperations from '../redux/phoneBookActions/phoneBookOperations';\nimport phoneBookSelectors from '../redux/phoneBookActions/phoneBookSelectors';\n// import authOperations from '../redux/auth/authOperations';\n\n// import ContactForm from './Contacts/ContactForm';\n// import ContactFormList from './ContactFormList/ContactFormList';\n// import Alert from './Alert/Alert';\n// import Filter from './Filter/Filter';\nimport Layout from './Layout/Layout';\n// import styles from './App.module.css';\n// import stylesAlert from './Alert/Alert.module.css';\n\nclass App extends Component {\n  // componentDidMount() {\n  //   this.props.onGetCurrentUser();\n  // }\n\n  // componentDidMount() {\n  //   if (this.props.isAuthenticated) {\n  //     authOperations.token.set(this.props.isAuthenticated);\n  //     this.props.onGetCurrentUser();\n  //   }\n  // }\n\n  render() {\n    const { loading } = this.props;\n    return (\n      <BrowserRouter>\n        <Layout>\n          <Suspense fallback={loading && <h2>Loading ...</h2>}>\n            <Switch>\n              {routes.map(route =>\n                route.private ? (\n                  <PrivateRoutes key={route.label} {...route} />\n                ) : (\n                  <PublicRoutes key={route.label} {...route} />\n                ),\n              )}\n              {/* // ----------- ALert ----- */}\n              {/* {alert && (\n                <CSSTransition\n                  classNames={stylesAlert}\n                  in={true}\n                  appear={true}\n                  timeout={1500}\n                  unmountOnExit\n                >\n                  <Alert alert={alert} />\n                </CSSTransition>\n              )} */}\n\n              {/* // ----------- Phonebook ----- */}\n\n              {/* <CSSTransition\n                classNames={styles}\n                in={true}\n                appear={true}\n                timeout={1500}\n                unmountOnExit\n              >\n                <h1 className={styles.sectionTitle}>Phonebook</h1>\n              </CSSTransition> */}\n\n              {/* // ----------- Contact FORM ---- */}\n\n              {/* <ContactForm /> */}\n              {/* <h2 className={styles.contactListTitle}>Contacts</h2> */}\n              {/* <Filter /> */}\n              {/* <ContactFormList /> */}\n            </Switch>\n          </Suspense>\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state.contacts.alertSwitch);\n  return {\n    // alert: phoneBookSelectors.getAlert(state),\n    loading: phoneBookSelectors.getLoading(state),\n    // isAuthenticated: phoneBookSelectors.isAuthenticated(state),\n  };\n};\n\n// const mapDispatchToProps = {\n//   onGetCurrentUser: authOperations.getCurrentUser,\n// };\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\nimport phoneBookActionsTypes from './phoneBookActionTypes';\n\nconst items = (state = [], { type, payload }) => {\n  // console.log(payload);\n  switch (type) {\n    case phoneBookActionsTypes.ADD_CONTACT_SUCCESS:\n      return [...state, payload];\n\n    case phoneBookActionsTypes.FETCH_CONTACT_SUCCESS:\n      return payload;\n\n    case phoneBookActionsTypes.DEL_CONTACT_SUCCESS:\n      console.log(state);\n      // console.log(items);\n      return state.filter(contacts => contacts.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', { type, payload }) => {\n  switch (type) {\n    case phoneBookActionsTypes.FILTER:\n      // console.log(\"filter\");\n      return payload.filter;\n\n    default:\n      return state;\n  }\n};\n\nconst alertSwitch = (state = false, { type, payload }) => {\n  switch (type) {\n    case phoneBookActionsTypes.DUPLICATE:\n      return !state;\n\n    default:\n      return state;\n  }\n};\n\nconst loading = (state = false, { type, payload }) => {\n  switch (type) {\n    case phoneBookActionsTypes.ADD_CONTACT_REQUEST:\n    case phoneBookActionsTypes.FETCH_CONTACT_REQUEST:\n    case phoneBookActionsTypes.DEL_CONTACT_REQUEST:\n      return true;\n\n    case phoneBookActionsTypes.ADD_CONTACT_SUCCESS:\n    case phoneBookActionsTypes.ADD_CONTACT_ERROR:\n    case phoneBookActionsTypes.FETCH_CONTACT_SUCCESS:\n    case phoneBookActionsTypes.FETCH_CONTACT_ERROR:\n    case phoneBookActionsTypes.DEL_CONTACT_SUCCESS:\n    case phoneBookActionsTypes.DEL_CONTACT_ERROR:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nconst error = (state = null, { type, payload }) => {\n  switch (type) {\n    case phoneBookActionsTypes.ADD_CONTACT_ERROR:\n    case phoneBookActionsTypes.FETCH_CONTACT_ERROR:\n    case phoneBookActionsTypes.DEL_CONTACT_ERROR:\n      return payload;\n\n    case phoneBookActionsTypes.ADD_CONTACT_REQUEST:\n    case phoneBookActionsTypes.FETCH_CONTACT_REQUEST:\n    case phoneBookActionsTypes.DEL_CONTACT_REQUEST:\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({ items, filter, alertSwitch, loading, error });\n","import authActionType from './authTypes';\nimport { combineReducers } from 'redux';\n\nconst initialState = {\n  email: '',\n  token: '',\n};\n\n// const authReducer = (state = { ...initialState }, { type, payload }) => {\n//   switch (type) {\n//     case authActionType.REGISTER_REQUEST:\n//       return { ...state };\n\n//     case authActionType.REGISTER_SUCCESS:\n//       return { ...state, ...payload };\n\n//     case authActionType.REGISTER_ERROR:\n//       return payload;\n\n//     case authActionType.LOGOUT_SUCCESS:\n//       return { ...initialState };\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const logInReducer = (state = { ...initialState }, { type, payload }) => {\n//   switch (type) {\n//     case authActionType.LOGIN_REQUEST:\n//       return { ...state };\n\n//     case authActionType.LOGIN_SUCCESS:\n//       return { ...state, ...payload };\n\n//     case authActionType.LOGIN_ERROR:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst user = (state = { ...initialState }, { type, payload }) => {\n  switch (type) {\n    case authActionType.REGISTER_SUCCESS:\n      return { ...state, ...payload.user };\n\n    case authActionType.LOGIN_SUCCESS:\n      return { ...state, ...payload.user };\n\n    case authActionType.GET_CURRENT_USER_SUCCESS:\n      return payload;\n\n    case authActionType.LOGOUT_SUCCESS:\n      return { ...initialState };\n\n    default:\n      return state;\n  }\n};\n\nconst token = (state = '', { type, payload }) => {\n  switch (type) {\n    case authActionType.REGISTER_SUCCESS:\n      return payload.token;\n\n    case authActionType.LOGIN_SUCCESS:\n      // console.log(payload);\n      return payload.token;\n\n    case authActionType.LOGOUT_SUCCESS:\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  // onAuth: authReducer,\n  // onLogIn: logInReducer,\n  user,\n  token,\n});\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport phoneBookReducers from './phoneBookActions/phoneBookReducers';\nimport authReducers from '../redux/auth/authReducer';\n\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [thunk];\n\nconst persistConfig = {\n  key: 'auth',\n  storage,\n  whiteList: ['token'],\n};\n\nconst rootReducer = combineReducers({\n  contacts: phoneBookReducers,\n  auth: persistReducer(persistConfig, authReducers),\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware)),\n);\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport { store, persistor } from './redux/store';\nimport { Provider } from 'react-redux';\n// import { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}